import { TypedRequest, TypedResponse } from './typed-fetch.cjs';
import type { Router, RouterBaseObject, RouterComponentsBase, RouterOptions, RouterSDK } from './types.cjs';
export declare function createRouterBase({ fetchAPI: givenFetchAPI, base: basePath, plugins, }?: RouterOptions<any, any>): RouterBaseObject<any, any, any>;
export declare function createRouter<TServerContext, TComponents extends RouterComponentsBase = {}, TRouterSDK extends RouterSDK<string, TypedRequest, TypedResponse> = {
    [TKey: string]: never;
}>({ title, description, version, oasEndpoint, components, swaggerUIEndpoint, swaggerUIOpts, plugins: userPlugins, base, ...options }?: RouterOptions<TServerContext, TComponents>): Router<TServerContext, TComponents, TRouterSDK>;
